#pragma checksum "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "987286d7a090d6175b8d487491c7079ffc0236a9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Schedule_TeacherLessons), @"mvc.1.0.view", @"/Views/Schedule/TeacherLessons.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\_ViewImports.cshtml"
using EveningSchool;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\_ViewImports.cshtml"
using EveningSchool.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"987286d7a090d6175b8d487491c7079ffc0236a9", @"/Views/Schedule/TeacherLessons.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3a5eb01ca052e0f68de0fa3e1ab9ca0e68b895e9", @"/Views/_ViewImports.cshtml")]
    public class Views_Schedule_TeacherLessons : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div id=""example"">
    <div id=""scheduler""></div>
</div>
<script id=""event-template"" type=""text/x-kendo-template"">
    <div class=""movie-template"">
      <p>#: title #</p>
      </div>
    </script>
<script id=""customEditorTemplate"" type=""text/x-kendo-template"">
    <div class=""k-edit-label"">
        <label for=""start"">Start</label>
      </div>
    <div data-container-for=""start"" class=""k-edit-field"">
        <input type=""text""
               data-role=""datetimepicker""
               data-interval=""15""
               data-type=""date""
               data-bind=""value:start,invisible:isAllDay""
               name=""start""/>
        <input type=""text"" data-type=""date"" data-role=""datepicker"" data-bind=""value:start,visible:isAllDay"" name=""start"" />
        <span data-bind=""text: startTimezone""></span>
        <span data-for=""start"" class=""k-invalid-msg"" style=""display: none;""></span>
      </div>
    <div class=""k-edit-label""><label for=""end"">End</label></div>
    <div data-container-for=""en");
            WriteLiteral(@"d"" class=""k-edit-field"">
        <input type=""text"" data-type=""date"" data-role=""datetimepicker"" data-bind=""value:end,invisible:isAllDay"" name=""end"" data-datecompare-msg=""End date should be greater than or equal to the start date"" />
        <input type=""text"" data-type=""date"" data-role=""datepicker"" data-bind=""value:end,visible:isAllDay"" name=""end"" data-datecompare-msg=""End date should be greater than or equal to the start date"" />
        <span data-bind=""text: endTimezone""></span>
        <span data-bind=""text: startTimezone, invisible: endTimezone""></span>
        <span data-for=""end"" class=""k-invalid-msg"" style=""display: none;""></span>
      </div>
    <div class=""k-edit-label""><label for=""recurrenceRule"">Repeat</label></div>
    <div data-container-for=""recurrenceRule"" class=""k-edit-field"">
        <div data-bind=""value:recurrenceRule"" name=""recurrenceRule"" data-role=""recurrenceeditor""></div>
      </div>
      <div class=""k-edit-label""><label for=""classId"">Класс</label></div>
          <div c");
            WriteLiteral(@"lass=""k-edit-field"">
              <input id=""class"" style=""width: 60%;"" data-bind=""value:classId""/>
          </div>
          <div class=""k-edit-label""><label for=""classId"">Предмет</label></div>
                    <div class=""k-edit-field"">
                        <input id=""subject"" style=""width: 60%;"" data-bind=""value:subjectId""/>
                    </div>
                    <div class=""k-edit-label""><label for=""classId"">Кабинет</label></div>
                                        <div class=""k-edit-field"">
                                            <input id=""cabinet"" style=""width: 60%;"" data-bind=""value:cabinetId""/>
                                        </div>
    </script>

<script>
$(function() {
    $(""#scheduler"").kendoScheduler({
        date: new Date(""2021/12/17 07:00 AM""),
        startTime: new Date(""2021/12/17 07:00 AM""),
        allDaySlot: false,
        majorTimeHeaderTemplate: """",
        timeSlot: false,
        ShowTimeRuler: false,
        majorTick: 1440, /");
            WriteLiteral(@"/set major tick to full day and leave the default startTime/endTime
        minorTickCount: 1,
        views: [
            {
                type: ""day"",
                selected: true,
            },
            
        ],
        editable: {
            template: $(""#customEditorTemplate"").html(),
        },
        edit: function(e) {
            $(""#class"").kendoDropDownList({
                dataTextField: ""className"",
                dataValueField: ""id"",
                optionLabel: ""Выберите класс..."",
                height: 500,
                dataSource: {
                    transport: {
                        read: {
                            url: """);
#nullable restore
#line 80 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                             Write(Url.Action("GetAllClasses", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            dataType: ""json"",
                            cache: false
                        }
                    }
                }
            });

            $(""#subject"").kendoDropDownList({
                dataTextField: ""subjectName"",
                dataValueField: ""id"",
                optionLabel: ""Выберите предмет..."",
                height: 500,
                dataSource: {
                    transport: {
                        read: {
                            url: """);
#nullable restore
#line 96 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                             Write(Url.Action("GetAllSubjects", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            dataType: ""json"",
                            cache: false
                        }
                    }
                }
            })
            $(""#cabinet"").kendoDropDownList({
                dataTextField: ""cabinetNumber"",
                dataValueField: ""id"",
                optionLabel: ""Выберите кабинет..."",
                height: 500,
                dataSource: {
                    transport: {
                        read: {
                            url: """);
#nullable restore
#line 111 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                             Write(Url.Action("GetAllCabinets", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            dataType: ""json"",
                            cache: false
                        }
                    }
                }
            })
        },
        eventTemplate: $(""#event-template"").html(),
        timezone: ""Europe/Minsk"",
        dataSource: {
            batch: true,
            transport: {
                read: {
                    url: """);
#nullable restore
#line 125 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                     Write(Url.Action("GetLessonsByTeacherId", "Schedule", new {id = ViewBag.Id}));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    dataType: \"json\"\r\n                },\r\n                // update: {\r\n                //         url: function(options) {\r\n                //             AddTeacherLessons(\"");
#nullable restore
#line 130 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                                             Write(Url.Action("AddTeacherLessons", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\", options);\r\n                //         },\r\n                //         dataType: \"jsonp\"\r\n                //     },\r\n                create: {\r\n                    url: function(options) {\r\n                        AddTeacherLessons(\"");
#nullable restore
#line 136 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                                      Write(Url.Action("AddTeacherLessons", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""", options)
                    }
                },
                destroy: {
                    url: """",
                    dataType: ""jsonp""
                },
                parameterMap: function(options, operation) {
                    if (operation !== ""read"" && options.models) {
                        return {
                            models: kendo.stringify(options.models)
                        };
                    }
                }
            },
            schema: {
                model: {
                    id: ""lessonId"",
                    fields: {
                        lessonId: {
                            from: ""id""
                        },
                        title: {
                            defaultValue: ""No title"",
                            validation: {
                                required: true
                            }
                        },
                        start: {
                            type: ""dat");
            WriteLiteral(@"e"",
                            from: ""dateStart""
                        },
                        end: {
                            type: ""date"",
                            from: ""dateEnd""
                        },
                        recurrenceRule: {
                            from: ""recurrenceRule""
                        },
                        lessonNumber: {
                            from: ""lessonNumber"",
                        },
                        teacherId: {
                            type: ""number"",
                            from: ""teacherId"",
                            defaultValue: ");
#nullable restore
#line 181 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
                                     Write(ViewBag.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        },
                        classId: {
                            type: ""number"",
                            from: ""classId""
                        },
                        subjectId: {
                            type: ""number"",
                            from: ""subjectId""
                        },
                        cabinetId: {
                            type: ""number"",
                            from: ""cabinetId""
                        }
                    }
                }
            }
        },
        group: {
            resources: [""LessonNumber""],
            orientation: ""vertical""
        },
        resources: [{
            field: ""lessonNumber"",
            name: ""LessonNumber"",
            dataSource: [{
                    text: ""Урок 1"",
                    value: 1
                },
                {
                    text: ""Урок 2"",
                    value: 2
                },
                {
             ");
            WriteLiteral(@"       text: ""Урок 3"",
                    value: 3
                },
                {
                    text: ""Урок 4"",
                    value: 4
                },
                {
                    text: ""Урок 5"",
                    value: 5
                },
                {
                    text: ""Урок 6"",
                    value: 6
                },
                {
                    text: ""Урок 7"",
                    value: 7
                },
                {
                    text: ""Урок 8"",
                    value: 8
                }
            ],
            title: ""LessonNumber""
        }]
    });
});

function AddTeacherLessons(url, options) {
    console.log(options.models[0])
    let model = {
        lessonNumber: options.models[0].lessonNumber,
        classId: options.models[0].classId,
        subjectId: options.models[0].subjectId,
        cabinetId: options.models[0].cabinetId,
        teacherId: options.models[0].teacherI");
            WriteLiteral("d,\r\n        dateStart: options.models[0].dateStart,\r\n        dateEnd: options.models[0].dateEnd,\r\n        recurrenceRule: options.models[0].recurrenceRule,\r\n        replacement: options.models[0].replacement\r\n    };\r\n    $.ajax({\r\n        url: \'");
#nullable restore
#line 258 "C:\Users\nanan\RiderProjects\EveningSchool\EveningSchool\Views\Schedule\TeacherLessons.cshtml"
         Write(Url.Action("AddTeacherLessons", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
        contentType: ""text/json"",
        type: 'POST',
        data: JSON.stringify(model),
        success: function(result) {
            var scheduler = $(""#scheduler"").data(""kendoScheduler"");
            scheduler.dataSource.read();
            scheduler.refresh();
        }
    })
} 
</script> 
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
